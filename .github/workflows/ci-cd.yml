name: CI/CD for Company Profile App
on:
  push:
    branches:
      - main

jobs:
  build-push:
    runs-on: ubuntu-latest

    env:
      APP_NAME: company-profile-container
      OPENSHIFT_NAMESPACE: risabafatir-dev
      IMAGE_REGISTRY: quay.io
      IMAGE_TAGS: latest
      OPENSHIFT_SERVER: ${{ secrets.OPENSHIFT_SERVER }}
      OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Podman and OpenShift CLI
      run: |
        sudo apt update
        sudo apt install -y podman curl
        curl -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz -o oc.tar.gz
        tar -xzf oc.tar.gz
        sudo mv oc kubectl /usr/local/bin/
        oc version

    - name: Build and Tag Image
      run: |
        podman build -t ${{ env.IMAGE_REGISTRY }}/${{ secrets.QUAY_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }} .

    - name: Log in to Quay.io
      env:
        QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
        QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
      run: |
        echo "$QUAY_PASSWORD" | podman login ${{ env.IMAGE_REGISTRY }} -u "$QUAY_USERNAME" --password-stdin

    - name: Push Image to Quay.io
      run: |
        podman push ${{ env.IMAGE_REGISTRY }}/${{ secrets.QUAY_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }}

    - name: Login to OpenShift
      run: |
        for i in {1..5}; do
          oc login ${{ env.OPENSHIFT_SERVER }} --token=${{ env.OPENSHIFT_TOKEN }} --insecure-skip-tls-verify && break || sleep 5
        done

    - name: Deploy Application
      run: |
        if oc get deployment ${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }}; then
          echo "Deployment ${{ env.APP_NAME }} exists. Updating image..."
          oc set image deployment/${{ env.APP_NAME }} ${{ env.APP_NAME }}=${{ env.IMAGE_REGISTRY }}/${{ secrets.QUAY_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }} -n ${{ env.OPENSHIFT_NAMESPACE }}
          oc rollout restart deployment/${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }}
        else
          echo "Creating new deployment..."
          oc create deployment ${{ env.APP_NAME }} --image=${{ env.IMAGE_REGISTRY }}/${{ secrets.QUAY_USERNAME }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAGS }} -n ${{ env.OPENSHIFT_NAMESPACE }}
        fi

    - name: Expose Service
      run: |
        if ! oc get service ${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }}; then
          echo "Creating new service..."
          oc expose deployment ${{ env.APP_NAME }} --port=8080 -n ${{ env.OPENSHIFT_NAMESPACE }}
        fi

    - name: Create Route for Public Access
      run: |
        if ! oc get route ${{ env.APP_NAME }} -n ${{ env.OPENSHIFT_NAMESPACE }}; then
          echo "Creating new route..."
          oc create route edge ${{ env.APP_NAME }} --service=${{ env.APP_NAME }} --insecure-policy=Redirect -n ${{ env.OPENSHIFT_NAMESPACE }}
        fi
